// Objective-C API for talking to github.com/TBD54566975/ssi-sdk-mobile/src/ssi Go package.
//   gobind -lang=objc github.com/TBD54566975/ssi-sdk-mobile/src/ssi
//
// File is generated by gobind. Do not edit.

#ifndef __Ssi_H__
#define __Ssi_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"


@class SsiCredentialSchema;
@class SsiCryptoKeyPair;
@class SsiDIDDocumentMobile;
@class SsiDIDKeyWrapper;
@class SsiDecodedDIDKey;
@class SsiRefreshService;
@class SsiServiceSetArray;
@class SsiStringArray;
@class SsiStringOrArray;
@class SsiVerifiableCredentialMobile;
@class SsiVerificationMethodArray;
@class SsiVerificationMethodSetArray;
@protocol SsiStringCollection;
@class SsiStringCollection;
@protocol SsiStringOrArrayCollection;
@class SsiStringOrArrayCollection;

@protocol SsiStringCollection <NSObject>
- (id<SsiStringCollection> _Nullable)add:(NSString* _Nullable)s;
- (NSString* _Nonnull)get:(long)i;
- (long)size;
@end

@protocol SsiStringOrArrayCollection <NSObject>
- (SsiStringOrArray* _Nullable)add:(NSString* _Nullable)s;
- (NSString* _Nonnull)get;
- (NSString* _Nonnull)getIndex:(long)i;
- (BOOL)isString;
- (NSString* _Nonnull)set:(NSString* _Nullable)s;
- (long)size;
@end

@interface SsiCredentialSchema : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull id_;
@property (nonatomic) NSString* _Nonnull type;
@end

@interface SsiCryptoKeyPair : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull keyType;
@property (nonatomic) NSData* _Nullable privKey;
@property (nonatomic) NSData* _Nullable pubKey;
@end

@interface SsiDIDDocumentMobile : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SsiStringArray* _Nullable context;
@property (nonatomic) NSString* _Nonnull id_;
@property (nonatomic) NSString* _Nonnull controller;
@property (nonatomic) NSString* _Nonnull alsoKnownAs;
@property (nonatomic) SsiVerificationMethodArray* _Nullable verificationMethod;
@property (nonatomic) SsiVerificationMethodSetArray* _Nullable authentication;
@property (nonatomic) SsiVerificationMethodSetArray* _Nullable assertionMethod;
@property (nonatomic) SsiVerificationMethodSetArray* _Nullable keyAgreement;
@property (nonatomic) SsiVerificationMethodSetArray* _Nullable capabilityInvocation;
@property (nonatomic) SsiVerificationMethodSetArray* _Nullable capabilityDelegation;
@property (nonatomic) SsiServiceSetArray* _Nullable services;
@end

@interface SsiDIDKeyWrapper : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSData* _Nullable privateJSONWebKey;
@property (nonatomic) NSString* _Nonnull didKey;
@end

@interface SsiDecodedDIDKey : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSData* _Nullable data;
@property (nonatomic) NSString* _Nonnull keyType;
@end

@interface SsiRefreshService : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull id_;
@property (nonatomic) NSString* _Nonnull type;
@end

@interface SsiServiceSetArray : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped method ServiceSetArray.Add with unsupported parameter or return types

// skipped method ServiceSetArray.Get with unsupported parameter or return types

- (long)size;
@end

@interface SsiStringArray : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
- (SsiStringArray* _Nullable)add:(NSString* _Nullable)s;
- (NSString* _Nonnull)get:(long)i;
- (long)size;
@end

@interface SsiStringOrArray : NSObject <goSeqRefInterface, SsiStringOrArrayCollection> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
- (SsiStringOrArray* _Nullable)add:(NSString* _Nullable)s;
- (NSString* _Nonnull)get;
- (NSString* _Nonnull)getIndex:(long)i;
- (BOOL)isString;
- (NSString* _Nonnull)set:(NSString* _Nullable)s;
- (long)size;
@end

@interface SsiVerifiableCredentialMobile : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) SsiStringArray* _Nullable context;
@property (nonatomic) NSString* _Nonnull id_;
@property (nonatomic) SsiStringArray* _Nullable type;
@property (nonatomic) NSData* _Nullable issuer;
@property (nonatomic) NSString* _Nonnull issuanceDate;
@property (nonatomic) NSString* _Nonnull expirationDate;
@property (nonatomic) NSData* _Nullable credentialStatus;
@property (nonatomic) NSData* _Nullable credentialSubject;
// skipped field VerifiableCredentialMobile.CredentialSchema with unsupported type: github.com/TBD54566975/ssi-sdk-mobile/src/ssi.CredentialSchema

// skipped field VerifiableCredentialMobile.RefreshService with unsupported type: github.com/TBD54566975/ssi-sdk-mobile/src/ssi.RefreshService

@property (nonatomic) NSData* _Nullable termsOfUse;
@property (nonatomic) NSData* _Nullable evidence;
@property (nonatomic) NSData* _Nullable proof;
// skipped method VerifiableCredentialMobile.ToGoRepresentation with unsupported parameter or return types

@end

@interface SsiVerificationMethodArray : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped method VerificationMethodArray.Add with unsupported parameter or return types

// skipped method VerificationMethodArray.Get with unsupported parameter or return types

- (long)size;
@end

@interface SsiVerificationMethodSetArray : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped method VerificationMethodSetArray.Add with unsupported parameter or return types

// skipped method VerificationMethodSetArray.Get with unsupported parameter or return types

- (long)size;
@end

/**
 * CreateDIDKey constructs a did:key from a specific key type and its corresponding public key
This method does not attempt to validate that the provided public key is of the specified key type.
A safer method is `GenerateDIDKey` which handles key generation based on the provided key type.
 */
FOUNDATION_EXPORT NSString* _Nonnull SsiCreateDIDKey(NSString* _Nullable kt, NSData* _Nullable publicKey, NSError* _Nullable* _Nullable error);

/**
 * DecodeDIDKey Decode takes a did:key and returns the underlying public key value as bytes, the LD key type, and a possible error
 */
FOUNDATION_EXPORT SsiDecodedDIDKey* _Nullable SsiDecodeDIDKey(NSString* _Nullable d, NSError* _Nullable* _Nullable error);

/**
 * ExpandDIDKey Expand turns the DID key into a compliant DID Document
 */
FOUNDATION_EXPORT SsiDIDDocumentMobile* _Nullable SsiExpandDIDKey(NSString* _Nullable d, NSError* _Nullable* _Nullable error);

/**
 * GenerateDIDKey takes in a key type value that this library supports and constructs a conformant did:key identifier.
The function returns the associated private key value cast to the generic golang crypto.PrivateKey interface.
To use the private key, it is recommended to re-cast to the associated type. For example, called with the input
for a secp256k1 key:
privKey, didKey, err := GenerateDIDKey(Secp256k1)
if err != nil { ... }
// where secp is an import alias to the secp256k1 library we use "github.com/decred/dcrd/dcrec/secp256k1/v4"
secpPrivKey, ok := privKey.(secp.PrivateKey)
if !ok { ... }
 */
FOUNDATION_EXPORT SsiDIDKeyWrapper* _Nullable SsiGenerateDIDKey(NSString* _Nullable kt, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT SsiCryptoKeyPair* _Nullable SsiGenerateEd25519Key(NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT SsiCryptoKeyPair* _Nullable SsiGenerateP256Key(NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT SsiCryptoKeyPair* _Nullable SsiGenerateP384Key(NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT SsiCryptoKeyPair* _Nullable SsiGenerateP521Key(NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT SsiCryptoKeyPair* _Nullable SsiGenerateRSA2048Key(NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT SsiCryptoKeyPair* _Nullable SsiGenerateSecp256k1Key(NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT SsiCryptoKeyPair* _Nullable SsiGenerateX25519Key(NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT SsiStringArray* _Nullable SsiGetSupportedKeyTypes(void);

FOUNDATION_EXPORT SsiStringArray* _Nullable SsiGetSupportedSignatureAlgs(void);

FOUNDATION_EXPORT BOOL SsiIsSupportedKeyType(NSString* _Nullable kt);

FOUNDATION_EXPORT BOOL SsiIsSupportedSignatureAlg(NSString* _Nullable sa);

FOUNDATION_EXPORT NSData* _Nullable SsiSignVerifiableCredentialJWT(NSString* _Nullable keyID, NSString* _Nullable keyType, NSData* _Nullable privateKey, NSData* _Nullable vcJSONBytes);

FOUNDATION_EXPORT BOOL SsiVerifyVerifiableCredentialJWT(NSString* _Nullable keyID, NSString* _Nullable keyType, NSData* _Nullable publicKey, NSData* _Nullable jwtBytes);

@class SsiStringCollection;

@class SsiStringOrArrayCollection;

@interface SsiStringCollection : NSObject <goSeqRefInterface, SsiStringCollection> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (id<SsiStringCollection> _Nullable)add:(NSString* _Nullable)s;
- (NSString* _Nonnull)get:(long)i;
- (long)size;
@end

@interface SsiStringOrArrayCollection : NSObject <goSeqRefInterface, SsiStringOrArrayCollection> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (SsiStringOrArray* _Nullable)add:(NSString* _Nullable)s;
- (NSString* _Nonnull)get;
- (NSString* _Nonnull)getIndex:(long)i;
- (BOOL)isString;
- (NSString* _Nonnull)set:(NSString* _Nullable)s;
- (long)size;
@end

#endif
