// Code generated by gobind. DO NOT EDIT.

// Java class mobile.DIDDocumentMobile is a proxy for talking to a Go program.
//
//   autogenerated by gobind -lang=java github.com/TBD54566975/ssi-sdk-mobile/mobile
package mobile;

import go.Seq;

public final class DIDDocumentMobile implements Seq.Proxy {
	static { Mobile.touch(); }
	
	private final int refnum;
	
	@Override public final int incRefnum() {
	      Seq.incGoRef(refnum, this);
	      return refnum;
	}
	
	DIDDocumentMobile(int refnum) { this.refnum = refnum; Seq.trackGoRef(refnum, this); }
	
	public DIDDocumentMobile() { this.refnum = __New(); Seq.trackGoRef(refnum, this); }
	
	private static native int __New();
	
	public final native StringArray getContext();
	public final native void setContext(StringArray v);
	
	public final native String getID();
	public final native void setID(String v);
	
	public final native String getController();
	public final native void setController(String v);
	
	public final native String getAlsoKnownAs();
	public final native void setAlsoKnownAs(String v);
	
	public final native VerificationMethodArray getVerificationMethod();
	public final native void setVerificationMethod(VerificationMethodArray v);
	
	public final native VerificationMethodSetArray getAuthentication();
	public final native void setAuthentication(VerificationMethodSetArray v);
	
	public final native VerificationMethodSetArray getAssertionMethod();
	public final native void setAssertionMethod(VerificationMethodSetArray v);
	
	public final native VerificationMethodSetArray getKeyAgreement();
	public final native void setKeyAgreement(VerificationMethodSetArray v);
	
	public final native VerificationMethodSetArray getCapabilityInvocation();
	public final native void setCapabilityInvocation(VerificationMethodSetArray v);
	
	public final native VerificationMethodSetArray getCapabilityDelegation();
	public final native void setCapabilityDelegation(VerificationMethodSetArray v);
	
	public final native ServiceSetArray getServices();
	public final native void setServices(ServiceSetArray v);
	
	@Override public boolean equals(Object o) {
		if (o == null || !(o instanceof DIDDocumentMobile)) {
		    return false;
		}
		DIDDocumentMobile that = (DIDDocumentMobile)o;
		StringArray thisContext = getContext();
		StringArray thatContext = that.getContext();
		if (thisContext == null) {
			if (thatContext != null) {
			    return false;
			}
		} else if (!thisContext.equals(thatContext)) {
		    return false;
		}
		String thisID = getID();
		String thatID = that.getID();
		if (thisID == null) {
			if (thatID != null) {
			    return false;
			}
		} else if (!thisID.equals(thatID)) {
		    return false;
		}
		String thisController = getController();
		String thatController = that.getController();
		if (thisController == null) {
			if (thatController != null) {
			    return false;
			}
		} else if (!thisController.equals(thatController)) {
		    return false;
		}
		String thisAlsoKnownAs = getAlsoKnownAs();
		String thatAlsoKnownAs = that.getAlsoKnownAs();
		if (thisAlsoKnownAs == null) {
			if (thatAlsoKnownAs != null) {
			    return false;
			}
		} else if (!thisAlsoKnownAs.equals(thatAlsoKnownAs)) {
		    return false;
		}
		VerificationMethodArray thisVerificationMethod = getVerificationMethod();
		VerificationMethodArray thatVerificationMethod = that.getVerificationMethod();
		if (thisVerificationMethod == null) {
			if (thatVerificationMethod != null) {
			    return false;
			}
		} else if (!thisVerificationMethod.equals(thatVerificationMethod)) {
		    return false;
		}
		VerificationMethodSetArray thisAuthentication = getAuthentication();
		VerificationMethodSetArray thatAuthentication = that.getAuthentication();
		if (thisAuthentication == null) {
			if (thatAuthentication != null) {
			    return false;
			}
		} else if (!thisAuthentication.equals(thatAuthentication)) {
		    return false;
		}
		VerificationMethodSetArray thisAssertionMethod = getAssertionMethod();
		VerificationMethodSetArray thatAssertionMethod = that.getAssertionMethod();
		if (thisAssertionMethod == null) {
			if (thatAssertionMethod != null) {
			    return false;
			}
		} else if (!thisAssertionMethod.equals(thatAssertionMethod)) {
		    return false;
		}
		VerificationMethodSetArray thisKeyAgreement = getKeyAgreement();
		VerificationMethodSetArray thatKeyAgreement = that.getKeyAgreement();
		if (thisKeyAgreement == null) {
			if (thatKeyAgreement != null) {
			    return false;
			}
		} else if (!thisKeyAgreement.equals(thatKeyAgreement)) {
		    return false;
		}
		VerificationMethodSetArray thisCapabilityInvocation = getCapabilityInvocation();
		VerificationMethodSetArray thatCapabilityInvocation = that.getCapabilityInvocation();
		if (thisCapabilityInvocation == null) {
			if (thatCapabilityInvocation != null) {
			    return false;
			}
		} else if (!thisCapabilityInvocation.equals(thatCapabilityInvocation)) {
		    return false;
		}
		VerificationMethodSetArray thisCapabilityDelegation = getCapabilityDelegation();
		VerificationMethodSetArray thatCapabilityDelegation = that.getCapabilityDelegation();
		if (thisCapabilityDelegation == null) {
			if (thatCapabilityDelegation != null) {
			    return false;
			}
		} else if (!thisCapabilityDelegation.equals(thatCapabilityDelegation)) {
		    return false;
		}
		ServiceSetArray thisServices = getServices();
		ServiceSetArray thatServices = that.getServices();
		if (thisServices == null) {
			if (thatServices != null) {
			    return false;
			}
		} else if (!thisServices.equals(thatServices)) {
		    return false;
		}
		return true;
	}
	
	@Override public int hashCode() {
	    return java.util.Arrays.hashCode(new Object[] {getContext(), getID(), getController(), getAlsoKnownAs(), getVerificationMethod(), getAuthentication(), getAssertionMethod(), getKeyAgreement(), getCapabilityInvocation(), getCapabilityDelegation(), getServices()});
	}
	
	@Override public String toString() {
		StringBuilder b = new StringBuilder();
		b.append("DIDDocumentMobile").append("{");
		b.append("Context:").append(getContext()).append(",");
		b.append("ID:").append(getID()).append(",");
		b.append("Controller:").append(getController()).append(",");
		b.append("AlsoKnownAs:").append(getAlsoKnownAs()).append(",");
		b.append("VerificationMethod:").append(getVerificationMethod()).append(",");
		b.append("Authentication:").append(getAuthentication()).append(",");
		b.append("AssertionMethod:").append(getAssertionMethod()).append(",");
		b.append("KeyAgreement:").append(getKeyAgreement()).append(",");
		b.append("CapabilityInvocation:").append(getCapabilityInvocation()).append(",");
		b.append("CapabilityDelegation:").append(getCapabilityDelegation()).append(",");
		b.append("Services:").append(getServices()).append(",");
		return b.append("}").toString();
	}
}

